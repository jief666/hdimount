#!/bin/bash
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  TARGET="$(readlink "$SOURCE")"
  if [[ $TARGET == /* ]]; then
    #echo "SOURCE '$SOURCE' is an absolute symlink to '$TARGET'"
    SOURCE="$TARGET"
  else
    DIR="$( dirname "$SOURCE" )"
    #echo "SOURCE '$SOURCE' is a relative symlink to '$TARGET' (relative to '$DIR')"
    SOURCE="$DIR/$TARGET" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
  fi
done
#echo "SOURCE is '$SOURCE'"
RDIR="$( dirname "$SOURCE" )"
DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
if [ "$DIR" != "$RDIR" ]; then
  #echo "DIR '$RDIR' resolves to '$DIR'"
  :
fi
SCRIPT_DIR="$DIR"

set -e



if [ x"$1" = xdebug ]
then
    Conf=Debug
    conf=debug
else
    Conf=Release
    conf=release
fi



if [ "$(uname)" = "Darwin" ]
then

    "$SCRIPT_DIR/../../build_xcodebuild/Build/Products/$Conf/create_di X10.7 openssl"

fi  




# "$(expr substr $(uname -s) 1 5)" doesn't work in macOs, that's why there is '! [ "$(uname)" = "Darwin" ]' before.

if ! [ "$(uname)" = "Darwin" ]  &&  [ "$(expr substr $(uname -s) 1 5)" = "Linux" ]
then
    echo This test cannot run on linux
fi
