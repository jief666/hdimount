#!/bin/bash
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  TARGET="$(readlink "$SOURCE")"
  if [[ $TARGET == /* ]]; then
    #echo "SOURCE '$SOURCE' is an absolute symlink to '$TARGET'"
    SOURCE="$TARGET"
  else
    DIR="$( dirname "$SOURCE" )"
    #echo "SOURCE '$SOURCE' is a relative symlink to '$TARGET' (relative to '$DIR')"
    SOURCE="$DIR/$TARGET" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
  fi
done
#echo "SOURCE is '$SOURCE'"
RDIR="$( dirname "$SOURCE" )"
DIR="$( cd -P "$( dirname "$SOURCE" )" >/dev/null 2>&1 && pwd )"
if [ "$DIR" != "$RDIR" ]; then
  #echo "DIR '$RDIR' resolves to '$DIR'"
  :
fi
SCRIPT_DIR="$DIR"

set -e



if [ x"$1" = xdebug ]
then
    Conf=Debug
    conf=debug
else
    Conf=Release
    conf=release
fi



if [ "$(uname)" = "Darwin" ]
then

    #To be able to copy and paste, define Conf variable
	xcodebuild -project "$SCRIPT_DIR"/../hdimount-xcode3.2.xcodeproj \
			-scheme "hdimount openssl X10.7 openssl" -configuration Release \
            HEADER_SEARCH_PATHS=""$SCRIPT_DIR"/../../lib/lib_osx.7/openssl/1.0.2j/include "$SCRIPT_DIR"/../../src/compression/lzfse/src /usr/local/include "$SCRIPT_DIR"/../../include/osxfuse-v3.8.2" \
            LIBRARY_SEARCH_PATHS="/usr/local/lib "$SCRIPT_DIR"/../../lib/lib_osx.7/openssl/1.0.2j/lib "$SCRIPT_DIR"/../../lib/lib_osx.7/osxfuse/3.8.3/dylib" \
            -derivedDataPath "$SCRIPT_DIR"/../../build_xcodebuild \
            | xcpretty
    if ! [ -z "$DIST_ARTIFACT_NAME" ]
    then
        if [ -f "$SCRIPT_DIR"/../../build_xcodebuild/Build/Products/$Conf/"hdimount openssl X10.7 openssl" ]
        then
	        mkdir -p "$SCRIPT_DIR"/../../dist
	        cp "$SCRIPT_DIR"/../../build_xcodebuild/Build/Products/$Conf/"hdimount openssl X10.7 openssl" "$SCRIPT_DIR"/../../dist/"$DIST_ARTIFACT_NAME"
	    else
	        echo File \'"$SCRIPT_DIR"/../../build_xcodebuild/Build/Products/$Conf/"hdimount openssl X10.7 openssl"\' doesn\'t exist, cannot copy to dist
	    fi
    fi

fi  



# "$(expr substr $(uname -s) 1 5)" doesn't work in macOs, that's why there is '! [ "$(uname)" = "Darwin" ]' before.

if ! [ "$(uname)" = "Darwin" ]  &&  [ "$(expr substr $(uname -s) 1 5)" = "Linux" ]
then
    export PATH="$SCRIPT_DIR"/../eclipse_compilation:$PATH
    cd "$SCRIPT_DIR"/../../build_${conf}_linux-gcc-openssl_hdimount
    make all
    if ! [ -z "$DIST_ARTIFACT_NAME" ]
    then
        if [ -f "$SCRIPT_DIR"/../../build_${conf}_linux-gcc-openssl_hdimount/hdimount ]
        then
            mkdir -p "$SCRIPT_DIR"/../../dist
            cp "$SCRIPT_DIR"/../../build_${conf}_linux-gcc-openssl_hdimount/hdimount "$SCRIPT_DIR"/../../dist/"$DIST_ARTIFACT_NAME"
	    else
	        echo File \'"$SCRIPT_DIR"/../../build_${conf}_linux-gcc-openssl_hdimount/hdimount\' doesn\'t exist, copy to dist
	    fi
	fi
fi

